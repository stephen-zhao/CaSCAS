//=============================================================================
// Analyzer.scala : CaSCAS Project
//=============================================================================

package org.cascas_project.cascas

class Analyzer {

  def typeInfer(ctx: Context, node: ParseNode): EvaluatedTypeEnum = node match {
    
    case TerminalNode(token) => {
      ctx.get(token.lexeme) match {
        case Some(t) => t
        case None    => {

          //TODO: do some fancy backtrace shit to "figure out" the type of this
        }
      }
    }

    case UnaryOperatorNode(operator, operand) => {
    }

    case BinaryOperatorNode(operator, (operand1, operand2)) => {
    }


  }

  def typeCheck(ctx: Context, t: EvaluatedTypeEnum): Bool = {
    //TODO: logic
    true
  }

}
